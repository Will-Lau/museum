<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="museum.museum.dao.RelicMapper" >
  <resultMap id="BaseResultMap" type="museum.museum.Entity.Relic" >
    <id column="r_id" property="rId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="time" property="time" jdbcType="VARCHAR" />
    <result column="size" property="size" jdbcType="VARCHAR" />
    <result column="kind" property="kind" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="belong_to" property="belongTo" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    r_id, name, time, size, kind, author, belong_to, description, pic
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="museum.museum.Entity.RelicExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Relic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from Relic
    where r_id = #{rId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from Relic
    where r_id = #{rId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="museum.museum.Entity.RelicExample" >
    delete from Relic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="museum.museum.Entity.Relic" >
    insert into Relic (r_id, name, time, 
      size, kind, author, 
      belong_to, description, pic
      )
    values (#{rId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, 
      #{size,jdbcType=VARCHAR}, #{kind,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{belongTo,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="museum.museum.Entity.Relic" >
    insert into Relic
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rId != null" >
        r_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="time != null" >
        time,
      </if>
      <if test="size != null" >
        size,
      </if>
      <if test="kind != null" >
        kind,
      </if>
      <if test="author != null" >
        author,
      </if>
      <if test="belongTo != null" >
        belong_to,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="pic != null" >
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rId != null" >
        #{rId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        #{size,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        #{kind,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="belongTo != null" >
        #{belongTo,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="museum.museum.Entity.RelicExample" resultType="java.lang.Integer" >
    select count(*) from Relic
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update Relic
    <set >
      <if test="record.rId != null" >
        r_id = #{record.rId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null" >
        time = #{record.time,jdbcType=VARCHAR},
      </if>
      <if test="record.size != null" >
        size = #{record.size,jdbcType=VARCHAR},
      </if>
      <if test="record.kind != null" >
        kind = #{record.kind,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null" >
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.belongTo != null" >
        belong_to = #{record.belongTo,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update Relic
    set r_id = #{record.rId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=VARCHAR},
      size = #{record.size,jdbcType=VARCHAR},
      kind = #{record.kind,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      belong_to = #{record.belongTo,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="museum.museum.Entity.Relic" >
    update Relic
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        time = #{time,jdbcType=VARCHAR},
      </if>
      <if test="size != null" >
        size = #{size,jdbcType=VARCHAR},
      </if>
      <if test="kind != null" >
        kind = #{kind,jdbcType=VARCHAR},
      </if>
      <if test="author != null" >
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="belongTo != null" >
        belong_to = #{belongTo,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where r_id = #{rId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="museum.museum.Entity.Relic" >
    update Relic
    set name = #{name,jdbcType=VARCHAR},
      time = #{time,jdbcType=VARCHAR},
      size = #{size,jdbcType=VARCHAR},
      kind = #{kind,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      belong_to = #{belongTo,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where r_id = #{rId,jdbcType=BIGINT}
  </update>
</mapper>